{"version":3,"sources":["components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","className","onClick","onSelect","id","aria-hidden","text","App","useState","newitem","setNewitem","currlist","setCurrlist","deleteItem","olditems","filter","arrEle","index","type","placeholder","value","onChange","e","target","map","listitems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAoBeA,EAlBE,SAACC,GAChB,OACE,mCACE,sBAAKC,UAAU,WAAf,UACE,wBACEA,UAAU,aACVC,QAAS,WACPF,EAAMG,SAASH,EAAMI,KAHzB,SAME,mBAAGH,UAAU,cAAcI,cAAY,WAEzC,oBAAIJ,UAAU,aAAd,SAA4BD,EAAMM,aC4C3BC,MAvDf,WAAgB,IAAD,EACiBC,qBADjB,mBACNC,EADM,KACGC,EADH,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,KAYPC,EAAa,SAACT,GAClBQ,GAAY,SAACE,GACX,OAAOA,EAASC,QAAO,SAACC,EAAQC,GAC9B,OAAOA,IAAUb,SAKvB,OACE,sBAAKH,UAAU,WAAf,UACE,oBAAIA,UAAU,UAAd,yBAEA,sBAAKA,UAAU,WAAf,UACE,uBACEiB,KAAK,OACLC,YAAY,cACZC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAWY,EAAEC,OAAOH,UAEvC,wBAAQlB,QA5BI,WAGhBU,GAAY,SAACE,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAW,KAsBqBT,UAAU,gBAAtC,kBAKF,oBAAIA,UAAU,gBAAd,SAIGU,EAASa,KAAI,SAACC,EAAWR,GACxB,OACE,cAAC,EAAD,CACEX,KAAMmB,EAENrB,GAAIa,EACJd,SAAUU,GAFLI,YCnCJS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ed260f0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ToDoList = (props) => {\n  return (\n    <>\n      <div className=\"maintodo\">\n        <button\n          className=\"donebutton\"\n          onClick={() => {\n            props.onSelect(props.id);\n          }}\n        >\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n        </button>\n        <li className=\"maintodoli\">{props.text}</li>\n      </div>\n    </>\n  );\n};\n\nexport default ToDoList;\n","import React, { useState } from \"react\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  const [newitem, setNewitem] = useState();\n  const [currlist, setCurrlist] = useState([]);\n  const addtolist = () => {\n    //setState function have acces to current state and change that state\n    //here we are acessing old data using spread operator and making a new array and adding new item at the end of old items\n    setCurrlist((olditems) => {\n      return [...olditems, newitem];\n    });\n    setNewitem(\"\");\n  };\n  // as props are immutable so they we ahve to make change in app.js to simplicity\n  const deleteItem = (id) => {\n    setCurrlist((olditems) => {\n      return olditems.filter((arrEle, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return (\n    <div className=\"todolist\">\n      <h1 className=\"heading\">TO DO LIST </h1>\n\n      <div className=\"inputdiv\">\n        <input\n          type=\"text\"\n          placeholder=\"Add an Item\"\n          value={newitem}\n          onChange={(e) => setNewitem(e.target.value)}\n        ></input>\n        <button onClick={addtolist} className=\"addtodobutton\">\n          +\n        </button>\n      </div>\n\n      <ol className=\"todolistitems\">\n        {/* //the index props in map funciton is return index of element it is\n        reading although it is not recommended to use index directly for key but\n        here we will compromise */}\n        {currlist.map((listitems, index) => {\n          return (\n            <ToDoList\n              text={listitems}\n              key={index}\n              id={index}\n              onSelect={deleteItem}\n            />\n          );\n        })}\n      </ol>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}